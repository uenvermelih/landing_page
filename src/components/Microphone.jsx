/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/microphone.gltf -o src/components/Microphone.jsx -r public 
Author: urbanmasque (https://sketchfab.com/urbanmasque)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/classic-microphone-07c5d34f8abc439d806be0eb5e0175d0
Title: Classic Microphone
*/

import React, { useRef, useLayoutEffect } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { gsap } from 'gsap'
import { useFrame } from '@react-three/fiber'

export function Microphone(props) {
  const { nodes, materials } = useGLTF('/models/microphone.gltf')



  const ref = useRef()
  const tl = useRef()

  const scroll = useScroll()

  useFrame(() => { tl.current.seek(scroll.offset * tl.current.duration()) })

  useLayoutEffect(() => {
    tl.current = gsap.timeline();

    tl.current.to(
      ref.current.position, 
      { duration: 3, 
        x: -5.8,
        z: 5,
       },
        0
    )

    tl.current.to(
      ref.current.rotation,
      { duration: 3,
        y: 0.4,
      },
    0
    )

  }, [])


  return (
    <group {...props} dispose={null} ref={ref}>
      <group position={[0, -1.138, 0.005]} rotation={[Math.PI / 2, 0, 0]} scale={1.022}>
        <group rotation={[-Math.PI, 0, 0]}>
          <mesh geometry={nodes.Layer_2base__0.geometry} material={materials['Scene_-_Root']} />
          <mesh geometry={nodes.Layer_4mic_head__0.geometry} material={materials['Scene_-_Root']} />
          <mesh geometry={nodes.Layer_4mic_head__0_1.geometry} material={materials['Scene_-_Root']} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/microphone.gltf')
